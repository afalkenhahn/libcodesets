----------------------------------------------------------
codesets.library - Library for handling different codesets
----------------------------------------------------------

$Id$
$Source$

2005-12-16  Jens Langner <Jens.Langner@light-speed.de>

    * init.c: changed the system default charset identification routines
      to use the GetDiskFontCtrl() function on AmigaOS4 to find out
      the currently active system charset. In addition, if this
      identification fails it will try to find out the charset by falling
      back to checking ENV:CHARSET, then using ENV:LANGUAGE to parse ther
      internal language<>codeset list and if this also fails it will
      directly use locale.library to find out the language to check
      our own internal fallback tables for default charset<>language
      mapping.
    * codesets.c: if running on AmigaOS4, codesets.library will now
      automatically query diskfont.library for the existing codesets
      and also load all existing mapping tables accordingly. It will
      also check if all internally known codesets are already present
      and if one of it was not loaded through diskfont.library, the
      internal mapping tables will be used as well.
    * debug.c,h: added a whole debugging output system adapted and
      relicensed from the YAM project. Now an environment variable
      can be usd (ENV:codesets.library.debug) to place debugging
      tags and allow to differniate which output should be displayed
      during runtime and which one not. This should hopefully make
      the debugging of the library much more easier.

2005-12-14  Jens Langner <Jens.Langner@light-speed.de>

    * codesets.c, codesets_table.h: updated internal codesets
      implementations in accordance to the latest implementation in
      SimpleMail. Now codesets.library also supports the Amiga-1251
      and ISO-8859-16.
    * misc: did some general housekeeping code cleanups.

2005-12-11  Jens Langner <Jens.Langner@light-speed.de>

    * developer/examples: ported the demo1.c application to all our
      supported platforms
    * include/SDI_*.h: update SDI headers to latest versions.

2005-12-08  Jens Langner <Jens.Langner@light-speed.de>

    * bumped version to v6 as the GCC/OS4 porting may introduce some
      oddities which we might eliminate during the v6 release cycle.
      Please note that this first OS3/GCC and OS4 porting effort may
      still contain some oddities here and there as large portions are
      still untested. However, we may have some time to fix step by step
      until we can prepare a v6.0 release.
    * got rid of all common compiler warnings which should make bug
      hunting much more easier.
    * restructed sources to use othe latest SDI-headers for easily
      maintaining the sources for all three platforms without
      introducing heaps to #ifdef's.
    * dropped all "register" attribute usages as modern compilers like
      GCC normally know where to put variables on registers and where not
      so these attributes are anyway not necessary.
    * dropped smakefile and all 68k ASM parts as we are moving towards
      building with GCC for all targets.
    * restructed the build environment of codesets.library to use
      GCC for all three major platforms (OS3/OS4/MOS). Also dropped
      the SAS/C build process. Sorry, but SAS/C is really way too old
      and too buggy to still be considered a sensible compiler and
      maintaining codesets.library for the very same compiler should
      eliminate some problems in future, too.
    * partly applied OS4 porting patch supplied by Alexandre Balaban.

2005-11-23  Alfonso Ranieri <alforan@tin.it>

    * initial checkin of LGPLed sources
